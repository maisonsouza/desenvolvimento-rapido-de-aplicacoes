/*
 * Monta uma tela com Swing
 * Seleciona Arquivo de Imagem
 * Faz upload da imagem para um caminho do projeto
 */
package interfaceGrafica.netbeans.uploadImage;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author Jhoyce
 */
public class UploadImage extends javax.swing.JFrame {

    /**
     * Creates new form UploadImage
     */
    
    JFileChooser chooser ;
    File file ;
    
    
    public UploadImage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLoadImage = new javax.swing.JButton();
        lblShowImage = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 204));

        btnLoadImage.setText("Carregar Imagem");
        btnLoadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadImageActionPerformed(evt);
            }
        });

        lblShowImage.setBackground(new java.awt.Color(255, 153, 153));
        lblShowImage.setForeground(new java.awt.Color(255, 255, 255));
        lblShowImage.setBorder(javax.swing.BorderFactory.createTitledBorder("Imagem"));

        btnUploadImage.setText("Salvar Imagem");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        txtMessage.setColumns(20);
        txtMessage.setForeground(new java.awt.Color(255, 51, 51));
        txtMessage.setRows(5);
        txtMessage.setEnabled(false);
        jScrollPane1.setViewportView(txtMessage);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnUploadImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnLoadImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(lblShowImage, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 119, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnLoadImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblShowImage, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUploadImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadImageActionPerformed
        try {
            //Declarando o componente seletor do arquivo
            chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            //Capturando o arquivo selecionado
            file = chooser.getSelectedFile();
            //Recuperando o caminho do arquivo
            String fileName = file.getAbsolutePath();

            //Criando icone da imagem
            ImageIcon img =new ImageIcon(fileName);
            //Redimensionando imagem
            Image newImg= img.getImage().getScaledInstance(100, 100, java.awt.Image.SCALE_DEFAULT);
            //Criando icone com img redimensionada
            ImageIcon icon = new ImageIcon(newImg);    
            //Apresentando imagem no Label
            lblShowImage.setIcon(icon);
            
        } catch (Exception ex) {
            txtMessage.setVisible(true);
            txtMessage.setText("Erro ao carregar imagem: " + ex.toString()+"!");
        }
        

          
        
    }//GEN-LAST:event_btnLoadImageActionPerformed

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        // TODO add your handling code here:
        try {
            //Criando buffer da img
            BufferedImage imgBuffer = ImageIO.read(file);
            //Recuperando caminho do projeto 
            String currentPath = new File(".").getAbsolutePath();
            //Definindo destino onde a img ser√° salva
            String destinyPath = "\\src\\imgs\\"+file.getName(); 
            //Criando o arquivo
            File destiny = new File(currentPath+destinyPath);
            //Salvando arquivo no destino
            ImageIO.write(imgBuffer, "png", destiny);
            txtMessage.setText("Imagem salva com sucesso!");
        
        } catch (Exception ex) {
            txtMessage.setText("Erro ao salvar imagem: " + ex.toString()+"!");
        } 
    }//GEN-LAST:event_btnUploadImageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UploadImage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadImage;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblShowImage;
    private javax.swing.JTextArea txtMessage;
    // End of variables declaration//GEN-END:variables
}
